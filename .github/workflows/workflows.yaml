name: "Continuous Integration"

on:
  push:
    paths-ignore:
      - '**/*.md'
      - '**/*.gitignore'
      - '**/*.gitattributes'
  pull_request:
    paths-ignore:
      - '**/*.md'
      - '**/*.gitignore'
      - '**/*.gitattributes'
  workflow_dispatch:
    branches:
      - main
    paths-ignore:
      - '**/*.md'
      - '**/*.gitignore'
      - '**/*.gitattributes'
      
jobs:
  build:
    name: (${{ matrix.os }}) Build Arch .NET/Core ${{ matrix.dotnet-version }}
    runs-on: ubuntu-latest
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      DOTNET_NOLOGO: true
      DOTNET_GENERATE_ASPNET_CERTIFICATE: false
      DOTNET_ADD_GLOBAL_TOOLS_TO_PATH: false
      DOTNET_MULTILEVEL_LOOKUP: 0
      DOTNET_SYSTEM_CONSOLE_ALLOW_ANSI_COLOR_REDIRECTION: true
      TERM: xterm

    strategy:
      fail-fast: false
      matrix:
        dotnet-version: [ '3.0', '3.1.x', '5.0.x', '6.0.x', '7.0.x' ]
        os: [windows-latest, ubuntu-latest]

    steps:
    - uses: actions/checkout@v3
      
    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ matrix.dotnet-version }}

    - name: Create temporary global.json
      run: |
        echo '{"sdk":{"version": "${{ steps.stepid.outputs.dotnet-version }}"}}' > ./global.json

    - name: Restore
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Test
      run: dotnet test --logger trx --results-directory "TestResults-${{ matrix.dotnet-version }}"

    - name: Upload dotnet test results
      uses: actions/upload-artifact@v3
      with:
        name: dotnet-results-${{ matrix.dotnet-version }}
        path: TestResults-${{ matrix.dotnet-version }}
      # Use always() to always run this step to publish test results when there are test failures
      if: ${{ always() }}